<Window x:Class="StockOverviewApplication.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:StockOverviewApplication"
        xmlns:viewModel ="clr-namespace:StockOverviewApplication.ViewModel"
        xmlns:StockHelper="clr-namespace:StockOverviewApplication.Model"
        xmlns:Converter="clr-namespace:StockOverviewApplication.Converters"
        xmlns:CustomValidation="clr-namespace:StockOverviewApplication.CustomValidators"
        xmlns:SummeryControls ="clr-namespace:StockOverviewApplication.CustomControl"
        mc:Ignorable="d" Height="550" MinWidth="1200"
        Title="Manage Stocks" WindowStartupLocation="CenterOwner" 
        WindowStyle="SingleBorderWindow" Background="Black" x:Name="StockWindow">
    
    <Window.Resources>
        <viewModel:StockOverview x:Key="stockViewData"/>
        <Style x:Key="TxtbxSummary" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
        </Style>
        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="StockHelper:StockType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Border BorderBrush="Red" BorderThickness="3">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={RelativeSource Self}, 
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <Border BorderBrush="Red" BorderThickness="3">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" 
                        Value="{Binding RelativeSource={RelativeSource Self}, 
                        Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BtnEnableDisable" TargetType="Button">
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtPrice}" Value="False"/>
                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=CmbBxStock}" Value="False"/>
                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=txtQuantity}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=(SelectedItem), ElementName=CmbBxStock}" Value="None"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=(Text), ElementName=txtPrice}" Value=""/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=(Text), ElementName=txtQuantity}" Value=""/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False"/>
                </MultiDataTrigger>

                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="#FF347DD6"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <DockPanel DataContext="{Binding Source={StaticResource stockViewData}, UpdateSourceTrigger=PropertyChanged}"
               Background="#FFE9E9E9" Margin="0,0,0,10" LastChildFill="True"
               ScrollViewer.CanContentScroll="True" 
               ScrollViewer.HorizontalScrollBarVisibility="Auto"
               ScrollViewer.VerticalScrollBarVisibility="Auto">
        <Border DockPanel.Dock="Top" Margin="2" BorderThickness="3" BorderBrush="#FF90C717"
                Background="#FF669900">
            <!--<Border.Background>
                <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                    <GradientStop Color="#FFFFC934" Offset="0"/>
                    <GradientStop Color="#FFFFFFFF" Offset="0.567"/>
                </LinearGradientBrush>
            </Border.Background>-->
            <Label DockPanel.Dock="Top" HorizontalAlignment="Center" VerticalAlignment="Center"
               Content="Stock Overview" FontSize="17" FontStyle="Italic" FontWeight="DemiBold"
               Foreground="White" Margin="5" />
        </Border>

        <Border DockPanel.Dock="Top" Margin="2,0" BorderBrush="DarkGray" BorderThickness="1" Background="#FF898989">
            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Height="35" 
                    Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15,2,0,2">

                <Label Content="Stock Type :" Width="Auto" Height="25"
                     Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Foreground="White" FontWeight="DemiBold"/>

                <ComboBox x:Name="CmbBxStock" ItemsSource="{Binding Source={StaticResource dataFromEnum }}"
                      Width="70" Height="25" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ComboBox.SelectedItem>
                        <Binding Path="StockType" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                            <Binding.ValidationRules >
                                <CustomValidation:StringValidationRule/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>

                <Label Content="Price :" Width="Auto" Height="25"
                     Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Foreground="White" FontWeight="DemiBold"/>

                <TextBox x:Name="txtPrice" Width="155" Height="25" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBox.Text>
                        <Binding Path="Price" UpdateSourceTrigger="PropertyChanged"  Mode="TwoWay" ConverterCulture='en-GB' StringFormat="C">
                            <Binding.ValidationRules>
                                <CustomValidation:NumberValidationRule ValidationStep="ConvertedProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Label Content="Quantity" Width="Auto" Height="25" BorderBrush="red"
                     Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Foreground="White" FontWeight="DemiBold"/>


                <TextBox x:Name="txtQuantity" Width="35" Height="25" Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBox.Text>
                        <Binding Path="Quantity" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                            <Binding.ValidationRules>
                                <CustomValidation:NumberValidationRule ValidationStep="ConvertedProposedValue"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <Button x:Name="btnAddStock" Content="Add Stock"  Width="65" Height="25"
                    Command="{Binding AddStockCommand}" 
                    Style="{DynamicResource BtnEnableDisable}" Margin="10,2,2,2"
                    HorizontalAlignment="Center" VerticalAlignment="Center"/>

            </StackPanel>
        </Border>

        <Border DockPanel.Dock="Right" Background="#FF3399FF" BorderThickness="3" BorderBrush="#FF3399FF">
        <StackPanel Orientation="Vertical" DockPanel.Dock="Right" Background="#FFE9E9E9" Width="270">
            <Label Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Summary" 
                   Padding="5,15" Foreground="#FF669900" FontWeight="Bold"
                   Background="#FFE9E9E9" FontStretch="ExtraExpanded" FontSize="18"/>
            
                <Label HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Content="Equity"
                        Padding="2" Foreground="#FFF4F5F7" FontWeight="Bold"
                   Background="#FF3399FF" FontStretch="ExtraExpanded"  MinWidth="150"/>
                <Grid Background="White" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition  Height="10"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="120"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Number :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding EquitySummary.TotalNumberOfEquityStock, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Stock Weight :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock  Style="{StaticResource TxtbxSummary}" Margin="2,0" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding  EquitySummary.TotalStockWeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Market Value :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding  EquitySummary.TotalMarketValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                </Grid>

                <Label HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Content="Bond"
                       Padding="2" Foreground="#FFF4F5F7" FontWeight="Bold"
                   Background="#FF3399FF" FontStretch="ExtraExpanded"  MinWidth="150"/>
                <Grid Background="White" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition  Height="10"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="120"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Number :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding BondSummary.TotalNumberOfBondStock, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Stock Weight :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding  BondSummary.TotalStockWeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Market Value :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding  BondSummary.TotalMarketValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                </Grid>
                <!-- Total Stock-->
                <Label HorizontalAlignment="Left" VerticalAlignment="Center" Margin="4" Content="In Total"
                       Padding="2" Foreground="#FFF4F5F7" FontWeight="Bold"
                   Background="#FF3399FF" FontStretch="ExtraExpanded"  MinWidth="150"/>
                <Grid Background="White" Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10"/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition  Height="10"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="120"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Number :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding TotalNumberOfStocks, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Stock Weight :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding  TotalStockWeight, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock Style="{StaticResource TxtbxSummary}"  Margin="2,0" Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="Total Market Value :" TextAlignment="Left" TextWrapping="Wrap"/>
                    <TextBlock  Style="{StaticResource TxtbxSummary}" Margin="2,0" Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                Text="{Binding  TotalMarketValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextAlignment="Left" TextWrapping="Wrap"/>
                </Grid>
            </StackPanel>
        </Border>
        <Label DockPanel.Dock="Top" Margin="15,2,0,2" Content="Stocks available for my funds" 
               Foreground="#FF3399FF" FontWeight="DemiBold" Background="#FFE9E9E9" Width="850"
               HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <DataGrid DockPanel.Dock="Bottom" AutoGenerateColumns="False" Margin="15,5,2,5"
                  AlternatingRowBackground="#FF6DA202" HorizontalGridLinesBrush="#FFD7D7D8" 
                  GridLinesVisibility="None" Width="850"
                  HorizontalAlignment="Left" VerticalAlignment="Top"
                  ItemsSource="{Binding Path=Stocks, Mode=TwoWay, 
                  UpdateSourceTrigger=PropertyChanged}"
                  RowHeight="35">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" Header="Name" MinWidth="75">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMarketValueNegative}" Value="true">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </DataTrigger>

                                <DataTrigger Binding="{Binding IsAcceptableTolerence}" Value="true">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn >
                <DataGridTextColumn Binding="{Binding StockType}" Header="Type" MinWidth="70"/>
                <DataGridTextColumn Binding="{Binding Price,ConverterCulture='en-GB', StringFormat=C}" Header="Price" MinWidth="150"/>
                <DataGridTextColumn Binding="{Binding Quantity}" Header="Quantity" MinWidth="80"/>
                <DataGridTextColumn Binding="{Binding MarketValue,ConverterCulture='en-GB',StringFormat=C}" Header="Market Value" MinWidth="150"/>
                <DataGridTextColumn Binding="{Binding TransactionCost,ConverterCulture='en-GB',StringFormat=C}" Header="Transaction Cost" MinWidth="150"/>
                <DataGridTextColumn Binding="{Binding StockWeight}" Header="Weight in %" MinWidth="70" Width="*"/>

            </DataGrid.Columns>
            
        </DataGrid>
       
    </DockPanel>
</Window>
